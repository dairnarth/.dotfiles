local M = {}

M.setup = function(contrast)
  local c = require('dairnarth.colours.palette').get_colours(contrast)
  local p = require('dairnarth.colours.palette').colours

  local groups = {
    Normal       = {fg = c.fg1, bg = c.bg0},
    NormalNC     = {link = "Normal"},
    CursorLine   = {link = "ColorColumn"},
    CursorLineNr = {fg = c.yellow, bg = c.bg1},
    CursorColumn = {link = "ColorColumn"},
    TabLine      = {fg = c.bg4, bg = c.bg1},
    TabLineFill  = {link = "TabLineFill"},
    TabLineSel   = {fg = c.green, bg = c.bg1},
    MatchParen   = {bg = c.bg3, bold = true},
    ColorColumn  = {bg = c.bg1},
    Conceal      = {fg = c.blue},
    NonText      = {fg = c.bg2},
    SpecialKey   = {fg = c.fg4},
    Visual       = {bg = c.bg3},
    VisualNOS    = {link = "Visual"},
    Search       = {fg = c.yellow, bold = true, italic = true, underline = true},
    IncSearch    = {fg = c.yellow, bold = true, italic = true, underline = true, reverse = true},
    CurSearch    = {link = "IncSearch"},
    QuickFixLine = {fg = c.bg0, bg = c.yellow, bold = true },
    Underlined   = {fg = c.blue, underline = true},
    StatusLine   = {link = "Normal"},
    StatusLineNC = {link = "NormalNC"},
    WinBar       = {fg = c.fg4},
    WinBarNC     = {fg = c.fg3, bg = c.bg1},
    WinSeparator = {fg = p.greys.dark3},
    WildMenu     = {fg = c.blue, bg = c.bg2, bold = true},
    Directory    = {fg = c.blue, bold = true},
    Title        = {fg = c.green, bold = true},
    ErrorMsg     = {fg = c.red, bold = true},
    MoreMsg      = {fg = c.yellow, bold = true},
    ModeMsg      = {fg = c.yellow, bold = true},
    Question     = {fg = c.orange, bold = true },
    WarningMsg   = {fg = c.red, bold = true },
    LineNr       = {fg = c.bg4},
    SignColumn   = {bg = c.bg1},
    Folded       = {fg = c.grey, bg = c.bg1},
    FoldColumn   = {fg = c.grey, bg = c.bg1},
    Cursor       = {reverse = true},
    vCursor      = {link = "Cursor"},
    iCursor      = {link = "Cursor"},
    lCursor      = {link = "Cursor"},
    Special      = {fg = c.orange},
    Comment      = {fg = c.grey},
    Todo         = {fg = c.fg0, bold = true},
    Done         = {fg = c.orange, bold = true},
    Error        = {fg = c.red, bold = true, reverse = true },
    Statement    = {fg = c.red},
    Conditional  = {fg = c.red},
    Repeat       = {fg = c.red},
    Label        = {fg = c.red},
    Exception    = {fg = c.red},
    Operator     = {fg = c.orange},
    Keyword      = {fg = c.red},
    Identifier   = {fg = c.blue},
    Function     = {fg = c.green, bold = true},
    PreProc      = {fg = c.cyan},
    Include      = {fg = c.cyan},
    Define       = {fg = c.cyan},
    Macro        = {fg = c.cyan},
    PreCondit    = {fg = c.cyan},
    Constant     = {fg = c.purple},
    Character    = {fg = c.purple},
    String       = {fg = c.green},
    Boolean      = {fg = c.purple},
    Number       = {fg = c.purple},
    Float        = {fg = c.purple},
    Type         = {fg = c.yellow},
    StorageClass = {fg = c.orange},
    Structure    = {fg = c.cyan},
    Typedef      = {fg = c.yellow },
    Pmenu        = {link = "Normal"},
    PmenuSel     = {fg = c.yellow, bold = true},
    PmenuSbar    = {bg = c.bg2},
    PmenuThumb   = {bg = c.bg4},
    DiffDelete   = {fg = c.red, reverse = true},
    DiffAdd      = {fg = c.green, reverse = true},
    DiffChange   = {fg = c.cyan, reverse = true},
    DiffText     = {fg = c.yellow, reverse = true},
    SpellCap     = {underline = true, sp = c.blue},
    SpellBad     = {underline = true, sp = c.red},
    SpellLocal   = {underline = true, sp = c.cyan},
    SpellRare    = {underline = true, sp = c.purple},
    Whitespace   = {fg = c.bg2},
    -- LSP Diagnostic
    DiagnosticError            = {fg = c.red},
    DiagnosticSignError        = {fg = c.red},
    DiagnosticUnderlineError   = {underline = true, sp = c.red},
    DiagnosticWarn             = {fg = c.yellow},
    DiagnosticSignWarn         = {fg = c.yellow},
    DiagnosticUnderlineWarn    = {underline = true, sp = c.yellow},
    DiagnosticInfo             = {fg = c.blue},
    DiagnosticSignInfo         = {fg = c.blue},
    DiagnosticUnderlineInfo    = {underline = true, sp = c.blue},
    DiagnosticHint             = {fg = c.cyan},
    DiagnosticSignHint         = {fg = c.cyan},
    DiagnosticUnderlineHint    = {underline = true, sp = c.cyan},
    DiagnosticFloatingError    = {fg = c.red},
    DiagnosticFloatingWarn     = {fg = c.orange},
    DiagnosticFloatingInfo     = {fg = c.blue},
    DiagnosticFloatingHint     = {fg = c.cyan},
    DiagnosticVirtualTextError = {fg = c.red},
    DiagnosticVirtualTextWarn  = {fg = c.yellow},
    DiagnosticVirtualTextInfo  = {fg = c.blue},
    DiagnosticVirtualTextHint  = {fg = c.cyan},
    LspReferenceRead           = {fg = c.yellow, bold = true},
    LspReferenceText           = {fg = c.yellow, bold = true},
    LspReferenceWrite          = {fg = c.orange, bold = true},
    LspCodeLens                = {fg = c.grey},
    -- nvim-treesitter (0.8 compat)
    -- Adapted from https://github.com/nvim-treesitter/nvim-treesitter/commit/42ab95d5e11f247c6f0c8f5181b02e816caa4a4f#commitcomment-87014462
    ["@annotation"]            = {link = "Operator"},
    ["@comment"]               = {link = "Comment"},
    ["@none"]                  = {bg = "NONE", fg = "NONE"},
    ["@preproc"]               = {link = "PreProc"},
    ["@define"]                = {link = "Define"},
    ["@operator"]              = {link = "Operator"},
    ["@punctuation.delimiter"] = {link = "Delimiter"},
    ["@punctuation.bracket"]   = {link = "Delimiter"},
    ["@punctuation.special"]   = {link = "Delimiter"},
    ["@string"]                = {link = "String"},
    ["@string.regex"]          = {link = "String"},
    ["@string.escape"]         = {link = "SpecialChar"},
    ["@string.special"]        = {link = "SpecialChar"},
    ["@character"]             = {link = "Character"},
    ["@character.special"]     = {link = "SpecialChar"},
    ["@boolean"]               = {link = "Boolean"},
    ["@number"]                = {link = "Number"},
    ["@float"]                 = {link = "Float"},
    ["@function"]              = {link = "Function"},
    ["@function.call"]         = {link = "Function"},
    ["@function.builtin"]      = {link = "Special"},
    ["@function.macro"]        = {link = "Macro"},
    ["@method"]                = {link = "Function"},
    ["@method.call"]           = {link = "Function"},
    ["@constructor"]           = {link = "Special"},
    ["@parameter"]             = {link = "Identifier"},
    ["@keyword"]               = {link = "Keyword"},
    ["@keyword.function"]      = {link = "Keyword"},
    ["@keyword.return"]        = {link = "Keyword"},
    ["@conditional"]           = {link = "Conditional"},
    ["@repeat"]                = {link = "Repeat"},
    ["@debug"]                 = {link = "Debug"},
    ["@label"]                 = {link = "Label"},
    ["@include"]               = {link = "Include"},
    ["@exception"]             = {link = "Exception"},
    ["@type"]                  = {link = "Type"},
    ["@type.builtin"]          = {link = "Type"},
    ["@type.qualifier"]        = {link = "Type"},
    ["@type.definition"]       = {link = "Typedef"},
    ["@storageclass"]          = {link = "StorageClass"},
    ["@attribute"]             = {link = "PreProc"},
    ["@field"]                 = {link = "Identifier"},
    ["@property"]              = {link = "Identifier"},
    ["@variable"]              = {fg = c.fg1},
    ["@variable.builtin"]      = {link = "Special"},
    ["@constant"]              = {link = "Constant"},
    ["@constant.builtin"]      = {link = "Special"},
    ["@constant.macro"]        = {link = "Define"},
    ["@namespace"]             = {fg = c.fg1},
    ["@symbol"]                = {link = "Identifier"},
    ["@text"]                  = {fg = c.fg1},
    ["@text.title"]            = {link = "Title"},
    ["@text.literal"]          = {link = "String"},
    ["@text.uri"]              = {link = "Underlined"},
    ["@text.math"]             = {link = "Special"},
    ["@text.environment"]      = {link = "Macro"},
    ["@text.environment.name"] = {link = "Type"},
    ["@text.reference"]        = {link = "Constant"},
    ["@text.todo"]             = {link = "Todo"},
    ["@text.todo.unchecked"]   = {link = "Todo"},
    ["@text.todo.checked"]     = {link = "Done"},
    ["@text.note"]             = {link = "SpecialComment"},
    ["@text.warning"]          = {link = "WarningMsg"},
    ["@text.danger"]           = {link = "ErrorMsg"},
    ["@text.diff.add"]         = {link = "diffAdded"},
    ["@text.diff.delete"]      = {link = "diffRemoved"},
    ["@tag"]                   = {link = "Tag"},
    ["@tag.attribute"]         = {link = "Identifier"},
    ["@tag.delimiter"]         = {link = "Delimiter"},

    -- nvim-treesitter (0.8 overrides)
    ["@text.strong"]           = {bold = true},
    ["@text.strike"]           = {strikethrough = true},
    ["@text.emphasis"]         = {italic = false},
    ["@text.underline"]        = {underline = true},
    ["@keyword.operator"]      = {fg = c.red},
  }

  return groups
end

return M
